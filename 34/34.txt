#include "U8glib.h"#include <SD.h>
#include <TinyGPS.h>
#include <avr/pgmspace.h>
 
//使用PROGMEM存放GPS方向陣列，節省SRAM
  prog_char d_0[] PROGMEM = "N";
  prog_char d_1[] PROGMEM = "NNE";
  prog_char d_2[] PROGMEM = "NE";
  prog_char d_3[] PROGMEM = "ENE";
  prog_char d_4[] PROGMEM = "E";
  prog_char d_5[] PROGMEM = "ESE";
  prog_char d_6[] PROGMEM = "SE";
  prog_char d_7[] PROGMEM = "SSE";
  prog_char d_8[] PROGMEM = "S";
  prog_char d_9[] PROGMEM = "SSW";
  prog_char d_10[] PROGMEM = "SW";
  prog_char d_11[] PROGMEM = "WSW";
  prog_char d_12[] PROGMEM = "W";
  prog_char d_13[] PROGMEM = "WNW";
  prog_char d_14[] PROGMEM = "NW";
  prog_char d_15[] PROGMEM = "NNW";
 
  PROGMEM const char *dir_table[]{   
    d_0,
    d_1,
    d_2,
    d_3,
    d_4,
    d_5,
    d_6,
    d_7,
    d_8,
    d_9,
    d_10,
    d_11,
    d_12,
    d_13,
    d_14,
    d_15
  };
 
 
TinyGPS gps;
U8GLIB_PCD8544 u8g(3, 4, 99, 5, 6);// SPI Com: SCK = 3, MOSI = 4, CS = 永遠接地, A0 = 5, Reset = 6
File myFile;
 
boolean sderror = false;//TF卡狀態
char logname[13];//記錄檔案名稱
boolean writelog = true;//是否要記錄目前資料到TF卡標誌
boolean refresh = false;//是否要更新液晶顯示標誌
boolean finish_init = false;//起始化完成標誌
 
byte satnum=0;//連線上的衛星個數
float flat, flon, spd, alt, oflat, oflon;//GPS資訊，經緯度、速度、高度、上一次的經緯度
unsigned long age;//GPS資訊 fix age
int year;//GPS資訊 年
byte month, day, hour, minute, second, hundredths;//GPS資訊 時間資訊
char crs[4];//GPS資訊 行駛方向
char sz[10];//文字資訊
byte cnt=0;//迴圈計數器
 
 
static void gpsdump(TinyGPS &gps);
static bool feedgps();
static void print_date(TinyGPS &gps);
static void print_satnum(TinyGPS &gps);
static void print_pos(TinyGPS &gps);
static void print_alt(TinyGPS &gps);
static void print_speed(TinyGPS &gps);
static void print_course(TinyGPS &gps);
static String float2str(float val, byte len);//AVR計時器，每秒觸發
ISR(TIMER1_OVF_vect){
  TCNT1=0x0BDC;// set initial value to remove time error (16bit counter register)(finish_init) refresh = true;//在完成起始化後，將更新顯示標誌設為true
}
 
 
void setup(){
 
  finish_init = false;//設定並啟動AVR計時器
  TIMSK1=0x01;// 啟用全域計時器中斷
  TCCR1A = 0x00;//normal operation page 148 (mode0);
  TCNT1=0x0BDC;//set initial value to remove time error (16bit counter register)
  TCCR1B = 0x04;//啟動計時器
 
  pinMode(10, OUTPUT);
 
  oflat = 0;
  oflon = 0;
  logname[0]'';
 
  Serial.begin(9600);//GPS模群組預設輸出9600bps的NMEA訊號
 
  u8g.setColorIndex(1);// 設定LCD顯示模式，黑白
  u8g.setFont(u8g_font_04b_03br);//字型
 
  //TF卡的片選埠是10
  if (!SD.begin(10)){
    sderror = true;}//起始化完成
  finish_init = true;}
 
void loop(){//讀取並分析GPS資料
   feedgps();//更新顯示
   if (refresh){
      cnt %=10;
      writelog = true;
   
      u8g.firstPage(); 
      do{
        gpsdump(gps);
        u8g.setPrintPos(70,48);
        u8g.print( cnt);} while ( u8g.nextPage());//每5秒且GPS訊號標準時將資料記錄到TF卡
      if (cnt % 5 == 0 && writelog){
        logEvent();}//更新完畢，更新秒計數器
      refresh = false;
      cnt++;}}
 
static void gpsdump(TinyGPS &gps){
  print_satnum(gps);
  print_date(gps);
  print_pos(gps);
  print_speed(gps);
  print_alt(gps);
  print_course(gps);}//更新並顯示衛星個數
static void print_satnum(TinyGPS &gps){
  satnum = gps.satellites();( satnum != TinyGPS::GPS_INVALID_SATELLITES){
    u8g.setPrintPos( 46, 6);
    u8g.print(satnum);
    writelog &= true;}
  else {
    u8g.drawStr( 10, 15, F("gTracking System"));
    u8g.drawStr( 22, 23, F("build 2506"));
    u8g.drawStr( 0, 34,(cnt % 2)? F("Searching..."): F(""));//u8g.drawStr( 7, 48, F("wells.osall.com"));
    writelog = false;}
  feedgps();}//更新並顯示GPS經緯度資訊
static void print_pos(TinyGPS &gps){
  gps.f_get_position(&flat,&flon,&age);(flat != TinyGPS::GPS_INVALID_F_ANGLE && flon !=  TinyGPS::GPS_INVALID_F_ANGLE){
    u8g.setPrintPos(0,40);
    u8g.print(float2str(flon,8));
    u8g.print(F(":"));
    u8g.print(float2str(flat,8));
    writelog &= true;}
  else
    writelog = false;
 
  feedgps();}//更新並顯示GPS高度資訊
static void print_alt(TinyGPS &gps){
  alt = gps.f_altitude();(alt != TinyGPS::GPS_INVALID_F_ALTITUDE){
    u8g.setPrintPos(0,48);
    u8g.print(F("Alt:"));
    u8g.print(float2str(alt,5));
    writelog &= true;}
  else
  {
    writelog = false;}
  feedgps();}//更新並顯示行駛方向
static void print_course(TinyGPS &gps){(gps.f_course() == TinyGPS::GPS_INVALID_F_ANGLE)
    writelog = false;
  else
  {//從PROGMEM中讀取陣列中的字串
    strcpy_P(crs,(char*)pgm_read_word(&(dir_table[gps.cardinal(gps.f_course())])));
    u8g.setPrintPos(60,6);
    u8g.print(crs);}
  feedgps();}//更新並顯示GPS時間
static void print_date(TinyGPS &gps){
  gps.crack_datetime(&year,&month,&day,&hour,&minute,&second,&hundredths,&age);(age != TinyGPS::GPS_INVALID_AGE && month>0 && day>0){
    u8g.setPrintPos( 0, 6);
    sprintf(sz,"%02d",((hour+8)% 24));//顯示北京時間 GMT+8
    u8g.print(sz);
    u8g.setPrintPos( 11, 6);
    u8g.print(second % 2 ? F(":"): F(""));
    u8g.setPrintPos(15,6);
    sprintf(sz,"%02d",minute);
    u8g.print(sz);
    writelog &= true;}
  else
    writelog = false;
  feedgps();}//更新並顯示時速
static void print_speed(TinyGPS &gps){
  spd = gps.f_speed_kmph();(spd != TinyGPS::GPS_INVALID_F_SPEED){(spd<0.5) spd=0.0;//隱藏0時速時的誤差顯示
    u8g.drawStr(0,14, F("SPEED"));
    u8g.setPrintPos(0,32);
    u8g.setFont(u8g_font_fub14n);//使用大字型
    u8g.print( float2str(spd,5));
    u8g.setFont(u8g_font_04b_03br);
    u8g.print(F(" km/h"));
    writelog &= true;}
  else
    writelog = false;
  feedgps();}//讀取並解碼GPS資訊
static bool feedgps(){
  while (Serial.available()){(gps.encode(Serial.read()))
      return true;}
  return false;}//將浮點數轉化為字串（整數部分<1000）
static String float2str(float val, byte len){
  String str = "";
  char tmp[4];
  byte pos = 0;
  int p1;
  bool minus=false;//取絕對值
  if (val<0){
    minus=true;
    len--;
    val = abs(val);}
 
  p1=(int)val;//取整數部分
  val=val-p1;//得到小數部分
 
  itoa(p1,tmp,10);//整數部分轉化為字串
  str.concat(tmp);//獲得小數點位置
  if (p1 == 0){
    pos = 1;}
  else {(pos=0;pos<len && p1>0;pos++)
      p1=p1/10;}//小數點
  if (pos<len && val>0){
    pos++;
    str.concat('.');}//小數部分加入字串
  for (;pos<len&& val>0;pos++){
    str.concat((char)('0'(byte)(val*10)));
    val= val * 10 - ((byte)(val*10));}(minus) str = "" + str; 
  return str;}//記錄資料到TF卡
void logEvent(){(logname[0]''){//取得檔案名稱
    sprintf(logname,"%04d%02d%02d.trc",  year, month, day, hour, minute, second);
    myFile=SD.open(logname, FILE_WRITE);(!myFile){
      sderror = true;}
    else {
       myFile.println(F("#gTracking#b2506#"));//輸出資料的版本資訊
       myFile.close();
       delay(10);}}//當位置和上一次（5秒前）相比發生一定變化量時才記錄資料（節省資料檔案的空間）(writelog && logname[0]!''&&(abs(flat-oflat) > 0.0001 || abs(flon - oflon) > 0.0001)){
    myFile=SD.open(logname, FILE_WRITE);(!myFile){
      sderror = true;}
    else
    {
      oflat = flat;
      oflon = flon;
      sprintf(sz,"%04d-%02d-%02d",  year, month, day);
      myFile.print(sz);
      myFile.print(F(","));
      sprintf(sz,"%02d:%02d:%02d,", hour, minute, second);
      myFile.print(sz);
      sprintf(sz,"%02d,",satnum);
      myFile.print(sz);
      myFile.print(float2str(flat,20));
      myFile.print(",");
      myFile.print(float2str(flon,20));
      myFile.print(",");
      myFile.print(float2str(alt,10));
      myFile.print(",");
      myFile.print(float2str(spd,10));
      myFile.print(",");
      myFile.print(crs);
      myFile.println(",");
      delay(20);
      myFile.flush();
      delay(50);
      myFile.close();}}}